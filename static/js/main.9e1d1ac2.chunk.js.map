{"version":3,"sources":["MrmVisualizer/MrmAlgo.js","MrmVisualizer/MrmVisualizer.jsx","App.js","reportWebVitals.js","index.js"],"names":["getBotGuess","userHistory","historyMap","botGuess","Math","round","random","zeros","ones","length","parseInt","i","max","pow","get","substring","console","log","getGuessFromHistory","MrmVisualizer","state","userCorrect","userIncorrect","Map","set","this","setState","updateGuesses","newuserCorrect","newuserIncorrect","newuserHistory","updateHistory","newhistoryMap","updateMap","onClick","guess0","guess1","Component","userGuess","cur","has","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e1d1ac2.chunk.js","sourcesContent":["//returns bot guess based on past guesses\r\n//userGuess = user's current guess \r\n//historyMap = map of user's history to predictions \r\n//userHistory = string of user's history \r\nexport function getBotGuess(userHistory,historyMap) {\r\n    const botGuess = getGuessFromHistory(userHistory,historyMap); \r\n    return botGuess; \r\n}\r\n\r\nfunction getGuessFromHistory(userHistory,historyMap) {\r\n    var botGuess = Math.round(Math.random()); \r\n    var zeros = 0; \r\n    var ones = 0;\r\n    if(userHistory.length===1) {\r\n        botGuess = !parseInt(userHistory[0]);\r\n    }\r\n    else {\r\n        for(let i=userHistory.length-2; i>=Math.max(0,userHistory.length-4); i--) {\r\n            zeros += Math.pow(historyMap.get(userHistory.length-1-i).get(userHistory.substring(i,userHistory.length-1)).get(0),userHistory.length-1-i); \r\n            ones += Math.pow(historyMap.get(userHistory.length-1-i).get(userHistory.substring(i,userHistory.length-1)).get(1),userHistory.length-1-i);\r\n        }\r\n        console.log(zeros);\r\n        console.log(ones);\r\n        if(zeros>ones) botGuess=0;\r\n        else if(zeros<ones) botGuess=1;  \r\n    }\r\n    return botGuess; \r\n}\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport {getBotGuess} from './MrmAlgo';\r\n\r\nexport default class MrmVisualizer extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            userCorrect: 0, \r\n            userIncorrect: 0, \r\n            userHistory: \"\", \r\n            historyMap : new Map(),\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const historyMap = new Map(); \r\n        historyMap.set(1,new Map(new Map())); \r\n        historyMap.set(2,new Map(new Map())); \r\n        historyMap.set(3,new Map(new Map()));  \r\n        this.setState({historyMap});\r\n    }\r\n\r\n    guess0() {\r\n        const {userCorrect,userIncorrect,userHistory,historyMap} = this.state; \r\n        const botGuess = getBotGuess(userHistory,historyMap);\r\n        const [newuserCorrect,newuserIncorrect] = updateGuesses(0,botGuess,userCorrect,userIncorrect); \r\n        const newuserHistory = updateHistory(0,userHistory);\r\n        const newhistoryMap = updateMap(newuserHistory,historyMap); \r\n        this.setState({userCorrect:newuserCorrect,userIncorrect:newuserIncorrect,userHistory:newuserHistory,historyMap:newhistoryMap}); \r\n    }\r\n\r\n    guess1() {\r\n        const {userCorrect,userIncorrect,userHistory,historyMap} = this.state; \r\n        const botGuess = getBotGuess(userHistory,historyMap);\r\n        const [newuserCorrect,newuserIncorrect] = updateGuesses(1,botGuess,userCorrect,userIncorrect); \r\n        const newuserHistory = updateHistory(1,userHistory);\r\n        const newhistoryMap = updateMap(newuserHistory,historyMap); \r\n        this.setState({userCorrect:newuserCorrect,userIncorrect:newuserIncorrect,userHistory:newuserHistory,historyMap:newhistoryMap});  \r\n    }\r\n\r\n    render() {\r\n        const {userCorrect,userIncorrect} = this.state; \r\n        return (\r\n            <>\r\n            <div> \r\n                userCorrect: {userCorrect} \r\n            </div> \r\n            <div>\r\n                userIncorrect: {userIncorrect}    \r\n            </div> \r\n            <button onClick={() => this.guess0()}>\r\n                Guess 0\r\n            </button>\r\n            <button onClick={() => this.guess1()}>\r\n                Guess 1\r\n            </button>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst updateGuesses = (userGuess,botGuess,userCorrect,userIncorrect) => {\r\n    if(userGuess===botGuess) {\r\n        userIncorrect++; \r\n    }\r\n    else {\r\n        userCorrect++; \r\n    }\r\n    return [userCorrect,userIncorrect]; \r\n};\r\n\r\nconst updateHistory = (userGuess,userHistory) => {\r\n    userHistory += userGuess\r\n    return userHistory; \r\n}; \r\n\r\nconst updateMap = (userHistory,historyMap) => {\r\n    var cur = 0; \r\n    if(userHistory[userHistory.length-1]===\"0\") {\r\n        for(let i=userHistory.length-2; i>=Math.max(0,userHistory.length-4); i--) {\r\n            if(!historyMap.get(userHistory.length-1-i).has(userHistory.substring(i,userHistory.length-1))) {\r\n                historyMap.get(userHistory.length-1-i).set(userHistory.substring(i,userHistory.length-1),new Map());\r\n                historyMap.get(userHistory.length-1-i).get(userHistory.substring(i,userHistory.length-1)).set(0,0);\r\n                historyMap.get(userHistory.length-1-i).get(userHistory.substring(i,userHistory.length-1)).set(1,0);                \r\n            }\r\n            cur = historyMap.get(userHistory.length-1-i).get(userHistory.substring(i,userHistory.length-1)).get(0);\r\n            historyMap.get(userHistory.length-1-i).get(userHistory.substring(i,userHistory.length-1)).set(0,cur+1); \r\n        }\r\n    }\r\n    else {\r\n        for(let i=userHistory.length-2; i>=Math.max(0,userHistory.length-4); i--) {\r\n            if(!historyMap.get(userHistory.length-1-i).has(userHistory.substring(i,userHistory.length-1))) {\r\n                historyMap.get(userHistory.length-1-i).set(userHistory.substring(i,userHistory.length-1),new Map());\r\n                historyMap.get(userHistory.length-1-i).get(userHistory.substring(i,userHistory.length-1)).set(0,0);\r\n                historyMap.get(userHistory.length-1-i).get(userHistory.substring(i,userHistory.length-1)).set(1,0);                \r\n            }\r\n            cur = historyMap.get(userHistory.length-1-i).get(userHistory.substring(i,userHistory.length-1)).get(1);\r\n            historyMap.get(userHistory.length-1-i).get(userHistory.substring(i,userHistory.length-1)).set(1,cur+1); \r\n        }\r\n    }\r\n    return historyMap; \r\n};","import React from 'react';\nimport './App.css';\nimport MrmVisualizer from './MrmVisualizer/MrmVisualizer';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <MrmVisualizer></MrmVisualizer> \n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}