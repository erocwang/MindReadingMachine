{"version":3,"sources":["MrmVisualizer/MrmAlgo.js","MrmVisualizer/MrmVisualizer.jsx","App.js","reportWebVitals.js","index.js"],"names":["getBotGuess","userGuess","userHistory","historyMap","botGuess","Math","round","random","top","length","parseInt","i","max","curGuess","get","has","substring","set","getGuessFromHistory","MrmVisualizer","props","state","userCorrect","userIncorrect","Map","showResult","document","body","style","backgroundColor","this","setState","e","console","log","keyCode","guess0","guess1","updateGuesses","newuserCorrect","newuserIncorrect","newuserHistory","updateHistory","newhistoryMap","updateMap","getElementById","innerHTML","tabIndex","onKeyDown","handleKeyPress","className","height","onClick","visibility","id","restart","Component","cur","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1ee06a32.chunk.js","sourcesContent":["//returns bot guess based on past guesses\r\n//userGuess = user's current guess \r\n//historyMap = map of user's history to predictions \r\n//userHistory = string of user's history \r\nexport function getBotGuess(userGuess,userHistory,historyMap) {\r\n    const botGuess = getGuessFromHistory(userGuess,userHistory,historyMap); \r\n    return botGuess; \r\n}\r\n\r\nfunction getGuessFromHistory(userGuess,userHistory,historyMap) {\r\n    var botGuess = Math.round(Math.random()); \r\n    var top = 0; \r\n    if(userHistory.length===1) {\r\n        botGuess = !parseInt(userHistory[0]);\r\n    }\r\n    else {\r\n        for(let i=userHistory.length-1; i>=Math.max(0,userHistory.length-5); i--) {\r\n            var curGuess = Math.round(Math.random()); \r\n            if(historyMap.get(userHistory.length-i).has(userHistory.substring(i,userHistory.length))) {\r\n                var zeros = historyMap.get(userHistory.length-i).get(userHistory.substring(i,userHistory.length)).get(0); \r\n                var ones = historyMap.get(userHistory.length-i).get(userHistory.substring(i,userHistory.length)).get(1);\r\n                if(zeros > ones) {\r\n                    curGuess = 0; \r\n                }\r\n                else {\r\n                    curGuess = 1; \r\n                }\r\n                if(historyMap.get(userHistory.length-i).get(\"est\").get(0)/Math.max(1,historyMap.get(userHistory.length-i).get(\"est\").get(1)) > top) {\r\n                    top = historyMap.get(userHistory.length-i).get(\"est\").get(0)/Math.max(1,historyMap.get(userHistory.length-i).get(\"est\").get(1)); \r\n                    botGuess = curGuess; \r\n                }\r\n                if(curGuess===userGuess) historyMap.get(userHistory.length-i).get(\"est\").set(0,historyMap.get(userHistory.length-i).get(\"est\").get(0)+1);\r\n                historyMap.get(userHistory.length-i).get(\"est\").set(1,historyMap.get(userHistory.length-i).get(\"est\").get(1)+1); \r\n            }\r\n        }\r\n    }\r\n    return botGuess; \r\n}\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport {getBotGuess} from './MrmAlgo';\r\nimport './MrmVisualizer.css';\r\n\r\nexport default class MrmVisualizer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userCorrect: 0, \r\n            userIncorrect: 0, \r\n            userHistory: \"\", \r\n            historyMap: new Map(),\r\n            showResult: 0, \r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.body.style.backgroundColor = \"grey\"; \r\n        const historyMap = new Map(); \r\n        historyMap.set(1,new Map(new Map())); \r\n        historyMap.get(1).set(\"est\", new Map());\r\n        historyMap.get(1).get(\"est\").set(0,0);\r\n        historyMap.get(1).get(\"est\").set(1,0);\r\n        historyMap.set(2,new Map(new Map())); \r\n        historyMap.get(2).set(\"est\",new Map());\r\n        historyMap.get(2).get(\"est\").set(0,0);\r\n        historyMap.get(2).get(\"est\").set(1,0);\r\n        historyMap.set(3,new Map(new Map()));\r\n        historyMap.get(3).set(\"est\",new Map());  \r\n        historyMap.get(3).get(\"est\").set(0,0);\r\n        historyMap.get(3).get(\"est\").set(1,0);\r\n        historyMap.set(4,new Map(new Map()));\r\n        historyMap.get(4).set(\"est\",new Map());  \r\n        historyMap.get(4).get(\"est\").set(0,0);\r\n        historyMap.get(4).get(\"est\").set(1,0);\r\n        historyMap.set(5,new Map(new Map()));\r\n        historyMap.get(5).set(\"est\",new Map());  \r\n        historyMap.get(5).get(\"est\").set(0,0);\r\n        historyMap.get(5).get(\"est\").set(1,0);\r\n        this.setState({historyMap});\r\n    }\r\n\r\n    handleKeyPress(e) {\r\n        console.log(e.keyCode); \r\n        if(e.keyCode === 37) {\r\n            this.guess0(); \r\n        }\r\n        else if(e.keyCode === 39) {\r\n            this.guess1(); \r\n        }\r\n    }\r\n\r\n    guess0() {\r\n        const {userCorrect,userIncorrect,userHistory,historyMap} = this.state; \r\n        const botGuess = getBotGuess(0,userHistory,historyMap);\r\n        const [newuserCorrect,newuserIncorrect] = updateGuesses(0,botGuess,userCorrect,userIncorrect); \r\n        const newuserHistory = updateHistory(0,userHistory);\r\n        const newhistoryMap = updateMap(newuserHistory,historyMap); \r\n        this.setState({userCorrect:newuserCorrect,userIncorrect:newuserIncorrect,userHistory:newuserHistory,historyMap:newhistoryMap}); \r\n        if(newuserCorrect>newuserIncorrect) document.getElementById(\"text\").innerHTML = \"You win!\";\r\n        else document.getElementById(\"text\").innerHTML = \"You lose!\";\r\n        if(newuserCorrect === 30 || newuserIncorrect === 30) this.setState({showResult: 1});\r\n        else this.setState({showResult: 0})\r\n    }\r\n\r\n    guess1() {\r\n        const {userCorrect,userIncorrect,userHistory,historyMap} = this.state; \r\n        console.log(userIncorrect); \r\n        const botGuess = getBotGuess(1,userHistory,historyMap);\r\n        const [newuserCorrect,newuserIncorrect] = updateGuesses(1,botGuess,userCorrect,userIncorrect); \r\n        const newuserHistory = updateHistory(1,userHistory);\r\n        const newhistoryMap = updateMap(newuserHistory,historyMap); \r\n        this.setState({userCorrect:newuserCorrect,userIncorrect:newuserIncorrect,userHistory:newuserHistory,historyMap:newhistoryMap});  \r\n        if(newuserCorrect>newuserIncorrect) document.getElementById(\"text\").innerHTML = \"You win!\";\r\n        else document.getElementById(\"text\").innerHTML = \"You lose!\";\r\n        if(newuserCorrect === 30 || newuserIncorrect === 30) this.setState({showResult: 1});\r\n        else this.setState({showResult: 0})\r\n    }\r\n\r\n    restart() {\r\n        this.setState({userCorrect: 0, userIncorrect: 0, showResult: 0, userHistory: \"\"});\r\n    }\r\n\r\n    render() {\r\n        const {userCorrect,userIncorrect,showResult} = this.state; \r\n        return (\r\n            <>\r\n            <div tabIndex=\"-1\" onKeyDown={(e) => this.handleKeyPress(e)}> \r\n            <div className=\"row-container\"> \r\n                <div className=\"black-box\">\r\n                </div>\r\n                <div className=\"white-box\">\r\n                </div>\r\n                <div className=\"black-box\">\r\n                </div>\r\n                <div className=\"white-box\">\r\n                </div>\r\n            </div>\r\n            <div className=\"row-container\"> \r\n                <div className=\"white-box\">\r\n                </div>\r\n                <div className=\"black-box\">\r\n                </div>\r\n                <div className=\"white-box\">\r\n                </div>\r\n                <div className=\"black-box\">\r\n                </div>\r\n            </div>\r\n            <div className = \"bar-container\"> \r\n                <div className = \"correct-bar\"\r\n                    style = {{height: `${userCorrect*2}px`}}\r\n                ></div> \r\n                <div className = \"incorrect-bar\"\r\n                    style = {{height: `${userIncorrect*2}px`}}\r\n                ></div> \r\n            </div>\r\n            <div className = \"text-container\"> \r\n                botIncorrect: {userCorrect} \r\n            </div> \r\n            <div className = \"text-container\">\r\n                botCorrect: {userIncorrect}    \r\n            </div> \r\n            <button onClick={() => this.guess0()}>\r\n                Guess 0\r\n            </button>\r\n            <button onClick={() => this.guess1()}>\r\n                Guess 1\r\n            </button>\r\n            <div className = \"result\" style = {{visibility: showResult ? `visible` : `hidden`}} >\r\n                <p id=\"text\"> </p> \r\n                <button onClick={() => this.restart()}>\r\n                    Restart!\r\n                </button>\r\n            </div> \r\n            </div> \r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst updateGuesses = (userGuess,botGuess,userCorrect,userIncorrect) => {\r\n    if(userGuess===botGuess) {\r\n        userIncorrect++; \r\n    }\r\n    else {\r\n        userCorrect++; \r\n    }\r\n    return [userCorrect,userIncorrect]; \r\n};\r\n\r\nconst updateHistory = (userGuess,userHistory) => {\r\n    userHistory += userGuess\r\n    return userHistory; \r\n}; \r\n\r\nconst updateMap = (userHistory,historyMap) => {\r\n    var cur = 0; \r\n    if(userHistory[userHistory.length-1]===\"0\") {\r\n        for(let i=userHistory.length-2; i>=Math.max(0,userHistory.length-6); i--) {\r\n            if(!historyMap.get(userHistory.length-1-i).has(userHistory.substring(i,userHistory.length-1))) {\r\n                historyMap.get(userHistory.length-1-i).set(userHistory.substring(i,userHistory.length-1),new Map());\r\n                historyMap.get(userHistory.length-1-i).get(userHistory.substring(i,userHistory.length-1)).set(0,0);\r\n                historyMap.get(userHistory.length-1-i).get(userHistory.substring(i,userHistory.length-1)).set(1,0);               \r\n            }\r\n            cur = historyMap.get(userHistory.length-1-i).get(userHistory.substring(i,userHistory.length-1)).get(0);\r\n            historyMap.get(userHistory.length-1-i).get(userHistory.substring(i,userHistory.length-1)).set(0,cur+1); \r\n        }\r\n    }\r\n    else {\r\n        for(let i=userHistory.length-2; i>=Math.max(0,userHistory.length-6); i--) {\r\n            if(!historyMap.get(userHistory.length-1-i).has(userHistory.substring(i,userHistory.length-1))) {\r\n                historyMap.get(userHistory.length-1-i).set(userHistory.substring(i,userHistory.length-1),new Map());\r\n                historyMap.get(userHistory.length-1-i).get(userHistory.substring(i,userHistory.length-1)).set(0,0);\r\n                historyMap.get(userHistory.length-1-i).get(userHistory.substring(i,userHistory.length-1)).set(1,0);          \r\n            }\r\n            cur = historyMap.get(userHistory.length-1-i).get(userHistory.substring(i,userHistory.length-1)).get(1);\r\n            historyMap.get(userHistory.length-1-i).get(userHistory.substring(i,userHistory.length-1)).set(1,cur+1); \r\n        }\r\n    }\r\n    return historyMap; \r\n};","import React from 'react';\nimport './App.css';\nimport MrmVisualizer from './MrmVisualizer/MrmVisualizer';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <MrmVisualizer></MrmVisualizer> \n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}